{"version":3,"sources":["Components/slider/slider.js","Routes/home/home.js","Routes/projects/projects.js","Components/footer/footer.js","Components/app/app.js","serviceWorker.js","index.js"],"names":["Slider","$","slick","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","dots","pauseOnHover","responsive","breakpoint","settings","class","Object","keys","technologies","map","key","OverlayTrigger","placement","overlay","Tooltip","name","src","process","logoSrc","alt","style","width","height","Component","Home","backgroundImage","backgroundSize","to","role","href","icon","faLinkedin","className","faGithub","Projects","hoverProject","e","currentTarget","getElementsByTagName","opacity","getElementsByClassName","resetHoverProject","Container","projects","project","index","onMouseOver","onMouseLeave","minHeight","liveUrl","faGlobeAmericas","codeUrl","border","thumbnailSrc","description","technology","Footer","backgroundColor","fontFamily","App","basename","Navbar","bg","variant","Brand","as","Link","exact","Nav","NavLink","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88912918.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport technologies from 'Data/technologies.json'\nimport $ from 'jquery'\nimport 'bootstrap'\nimport 'slick-carousel/slick/slick'\nimport './slider.css'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\nexport default class Slider extends Component {\n  componentDidMount() {\n    $('.customer-logos').slick({\n      slidesToShow: 10,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 1500,\n      arrows: false,\n      dots: false,\n      pauseOnHover: false,\n      responsive: [\n        {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 7,\n          },\n        },\n        {\n          breakpoint: 520,\n          settings: {\n            slidesToShow: 4,\n          },\n        },\n      ],\n    })\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <h2>Technologies</h2>\n        <section class=\"customer-logos slider\">\n          {Object.keys(technologies).map((key) => (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>{technologies[key].name}</Tooltip>}\n            >\n              <div class=\"slide\">\n                <img\n                  src={\n                    process.env.PUBLIC_URL +\n                    '/technologies_logos/' +\n                    technologies[key].logoSrc\n                  }\n                  alt={technologies[key].name + ' logo'}\n                  style={{ width: '56px', height: '56px' }}\n                />\n              </div>\n            </OverlayTrigger>\n          ))}\n        </section>\n      </div>\n    )\n  }\n}\n","import { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Slider from 'Components/slider'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function Home() {\n  return (\n    <div>\n      <div\n        class=\"jumbotron jumbotron-fluid\"\n        style={{\n          backgroundImage: 'url(' + process.env.PUBLIC_URL + '/home_hero.jpg)',\n          backgroundSize: 'cover',\n        }}\n      >\n        <div class=\"container\">\n          <h1 class=\"display-4\">Hi there, and welcome!</h1>\n          <p class=\"lead\">\n            My name is Tiago Nunes, and this is my online portfolio.\n          </p>\n          <hr class=\"my-4\" />\n          <p>\n            Here, you can get to know about some of my projects and interests.\n          </p>\n          <p class=\"lead\">\n            <NavLink\n              class=\"btn btn-primary btn-lg\"\n              to=\"/projects\"\n              role=\"button\"\n            >\n              Check out Projects\n            </NavLink>\n            <a\n              class=\"btn btn-light btn-lg ml-3\"\n              href=\"https://www.linkedin.com/in/tiago-nunes-8430401b7/\"\n              role=\"button\"\n            >\n              <FontAwesomeIcon icon={faLinkedin} className=\"mr-2\" />\n              LinkedIn\n            </a>\n            <a\n              class=\"btn btn-light btn-lg ml-2\"\n              href=\"https://github.com/tiagonuneslx\"\n              role=\"button\"\n            >\n              <FontAwesomeIcon icon={faGithub} className=\"mr-2\" />\n              GitHub\n            </a>\n          </p>\n        </div>\n      </div>\n      <Slider />\n    </div>\n  )\n}\n","import React from 'react'\nimport projects from 'Data/projects.json'\nimport technologies from 'Data/technologies.json'\nimport { Container, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobeAmericas } from '@fortawesome/free-solid-svg-icons'\nimport './projects.css'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nexport default function Projects() {\n  function hoverProject(e) {\n    e.currentTarget.getElementsByTagName('img')[0].style.opacity = 0.4\n    e.currentTarget.getElementsByClassName('urls-buttons')[0].style.opacity = 1\n  }\n\n  function resetHoverProject(e) {\n    e.currentTarget.getElementsByTagName('img')[0].style.opacity = 1\n    e.currentTarget.getElementsByClassName('urls-buttons')[0].style.opacity = 0\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      {projects.map((project, index) => (\n        <div\n          className=\"card mb-3\"\n          onMouseOver={hoverProject}\n          onMouseLeave={resetHoverProject}\n        >\n          <div className=\"row no-gutters\">\n            <div\n              className=\"col-lg-5 image-container\"\n              style={{\n                minHeight: '200px',\n              }}\n            >\n              <div className=\"row h-100 center-vertically urls-buttons\">\n                <div className=\"col-sm center-vertically text-center\">\n                  {project.liveUrl ? (\n                    <a href={project.liveUrl} class=\"btn btn-primary mr-1\">\n                      <FontAwesomeIcon\n                        icon={faGlobeAmericas}\n                        className=\"mr-1\"\n                      />\n                      Visit Website\n                    </a>\n                  ) : (\n                    <span />\n                  )}\n                  {project.codeUrl ? (\n                    <a\n                      href={project.codeUrl}\n                      class=\"btn btn-light ml-1\"\n                      style={{ border: '1px solid lightgray' }}\n                    >\n                      <FontAwesomeIcon icon={faGithub} className=\"mr-1\" />\n                      View Source Code\n                    </a>\n                  ) : (\n                    <span />\n                  )}\n                </div>\n              </div>\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  '/projects_thumbnails/' +\n                  project.thumbnailSrc\n                }\n                alt={project.name + ' thumbnail'}\n              />\n            </div>\n            <div className=\"col-sm\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{project.name}</h5>\n                <p className=\"card-text\">{project.description}</p>\n                {project.technologies.map((technology) =>\n                  technologies[technology] ? (\n                    <OverlayTrigger\n                      placement=\"top\"\n                      overlay={\n                        <Tooltip>{technologies[technology].name}</Tooltip>\n                      }\n                    >\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          '/technologies_logos/' +\n                          technologies[technology].logoSrc\n                        }\n                        alt={technologies[technology].name + ' logo'}\n                        style={{ width: '56px', height: '56px' }}\n                      />\n                    </OverlayTrigger>\n                  ) : (\n                    <span />\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </Container>\n  )\n}\n","import React from 'react'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function Footer() {\n  return (\n    <footer\n      className=\"page-footer font-small text-center py-3 mt-5\"\n      style={{\n        backgroundColor: '#eceff1',\n        fontFamily: \"'Roboto', sans-serif\",\n      }}\n    >\n      2020 Tiago Nunes Portfolio |\n      <a href=\"https://www.linkedin.com/in/tiago-nunes-8430401b7/\">\n        <FontAwesomeIcon icon={faLinkedin} className=\"ml-2 mr-1\" />\n        LinkedIn\n      </a>\n      ,\n      <a href=\"https://github.com/tiagonuneslx\">\n        <FontAwesomeIcon icon={faGithub} className=\"mx-1\" />\n        GitHub\n      </a>\n    </footer>\n  )\n}\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Link,\n} from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport Home from 'Routes/home'\nimport Projects from 'Routes/projects'\nimport Footer from 'Components/footer'\n\nexport default function App() {\n  return (\n    <Router basename=\"/portfolio\">\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand as={Link} exact to=\"/\">\n          Portfolio\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={NavLink} exact to=\"/\">\n            Home\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/projects\">\n            Projects\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/projects\">\n          <Projects />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'Components/app'\nimport * as serviceWorker from './serviceWorker'\nimport 'Styles/index.css'\nimport 'Styles/bootstrap.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}